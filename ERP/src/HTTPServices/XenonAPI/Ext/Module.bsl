// HTTPСервисЗапрос

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыЗапроса(Запрос) Экспорт
	
	Попытка
		
		Возврат ОбщегоНазначения.JSONВСтруктуру(Запрос.ПолучитьТелоКакСтроку());
	
	Исключение
		
		ВызватьИсключение СтрШаблон("Неверные параметры запроса (%1)", ОписаниеОшибки());
		
	КонецПопытки;
	
КонецФункции

Функция СформироватьОтвет(ПараметрыОтвета, КодОтвета=200)
	
	Ответ = Новый HTTPСервисОтвет(КодОтвета);
	Ответ.УстановитьТелоИзСтроки(ОбщегоНазначения.ОбъектВJSON(ПараметрыОтвета));
	Возврат Ответ;
	
КонецФункции

#КонецОбласти
	
#Область Сервисы

Функция echoGET(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос);
	Возврат СформироватьОтвет(ПараметрыЗапроса);
	
КонецФункции

Функция promocode_infoGET(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос);
	
	ДатаПодписки = ТекущаяДата();	
	ПланПодписки = Справочники.ПланПодписки.Базовый;	
	ПромокодСтрока = ПараметрыЗапроса.promo_code;
	
	ДанныеПромокода = ПромокодыНаСервере.ПолучитьДанныеПоПромокоду(ПромокодСтрока, ПланПодписки, ДатаПодписки);
	
	Если ДанныеПромокода <> Неопределено Тогда
		
		ПараметрыОтвета = КсенонОтвет.ПрайсЛистПоПромокоду(ДанныеПромокода, ПромокодСтрока);
		Возврат СформироватьОтвет(ПараметрыОтвета);
		
	Иначе
		
		Возврат СформироватьОтвет(Неопределено, 204);
		
	КонецЕсли;

КонецФункции

Функция pricelistGET(Запрос)
		
	ДатаСреза = ТекущаяДата();	
	ПланПодписки = Справочники.ПланПодписки.Базовый;	
	
	ПрайсЛист = РегистрыСведений.ИсторияИзмененийОсновныхПрайсЛистов.ПолучитьОсновнойПрайсЛистНаДату(ДатаСреза, ПланПодписки);
	
    Если ПрайсЛист <> Неопределено Тогда
		
		ПараметрыОтвета = КсенонОтвет.ПрайсЛист(ПрайсЛист);
		Возврат СформироватьОтвет(ПараметрыОтвета);
		
	Иначе	
		
		ВызватьИсключение "Основной прайс лист не установлен!";
		
	КонецЕсли;
	
КонецФункции

Функция invoicePOST(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос);
	Ответ = КсенонОтвет.СчетНаОплату(ПараметрыЗапроса.telegram_id, ПараметрыЗапроса.selected_item, ПараметрыЗапроса.payment_method_id);
	Возврат СформироватьОтвет(Ответ.Параметры, ?(Ответ.Создано, 201, 200));
	
КонецФункции

Функция invoiceGET(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос); 
	ПараметрыОтвета = КсенонОтвет.ИнформацияОСчетеНаОплату(ПараметрыЗапроса.invoice);
	Возврат СформироватьОтвет(ПараметрыОтвета);
	
КонецФункции

Функция userPOST(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос);
	Ответ = СессииТелеграмНаСервере.ПолучитьКонтрагентаСессииИлиСоздать(
		ПараметрыЗапроса.telegram_id, Перечисления.Бот.ПользовательскийБазовый, ПараметрыЗапроса.full_name);
	Возврат СформироватьОтвет(КсенонОтвет.ОбернутьОбъект(Ответ.Контрагент), ?(Ответ.Создано, 201, 200));
	
КонецФункции

Функция paymentPOST(Запрос)
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Запрос);
	ПараметрыОтвета = КсенонОтвет.Оплата(ПараметрыЗапроса.invoice);
	Возврат СформироватьОтвет(ПараметрыОтвета); 
	
КонецФункции

#КонецОбласти