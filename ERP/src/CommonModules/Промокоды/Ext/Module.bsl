Функция ПолучитьДанныеПоПромокоду(Промокод, ДатаОтбора) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПромокодыПериодДействия.ПрайсЛист КАК ПрайсЛист,
		|	ПромокодыПериодДействия.Регистратор КАК Регистратор,
		|	ПромокодыПериодДействия.ИспользуетсяОдинРаз КАК ИспользуетсяОдинРаз
		|ИЗ
		|	РегистрСведений.ПромокодыПериодДействия КАК ПромокодыПериодДействия
		|ГДЕ
		|	ПромокодыПериодДействия.Промокод = &Промокод
		|	И &Дата МЕЖДУ ПромокодыПериодДействия.ДатаНачала И ПромокодыПериодДействия.ДатаОкончания";
	
	Запрос.УстановитьПараметр("Дата", ДатаОтбора);
	Запрос.УстановитьПараметр("Промокод", ВРег(СокрЛП(Промокод)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
    	Возврат Неопределено;
	ИначеЕсли ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		
		ВыборкаДетальныеЗаписи.Следующий();
		
        Если ВыборкаДетальныеЗаписи.ИспользуетсяОдинРаз И ПромокодИспользован(Промокод) Тогда
			Возврат Неопределено;	
		КонецЕсли;
					
		Реферал	= ?(ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПартнерскийКонтракт"),
			 ВыборкаДетальныеЗаписи.Регистратор.Партнер,
			 Неопределено
		);
			
		Возврат Новый Структура("ПрайсЛист, Реферал, ИсточникПодписки", ВыборкаДетальныеЗаписи.ПрайсЛист, Реферал, ВыборкаДетальныеЗаписи.Регистратор);
		
	Иначе
		ВызватьИсключение "Промокод не уникален!";	
	КонецЕсли;	
	
КонецФункции


Функция ПромокодИспользован(Промокод)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ИспользованияПромокода КАК ИспользованияПромокода
		|ГДЕ
		|	ИспользованияПромокода.Промокод = &Промокод";
	
	Запрос.УстановитьПараметр("Промокод", Промокод);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();

КонецФункции

Функция ЗапаковатьПромокодBase64(Промокод) Экспорт
	
	Упаковка = Новый Структура("promo_code", Промокод);
	УпаковкаJSON = ОбщегоНазначения.ОбъектВJSON(Упаковка);
	Возврат ОбщегоНазначения.URL_Safe_Base64_Кодировать(УпаковкаJSON);
	
КонецФункции