
Функция КоличествоСлотовЗанято(СерверСсылка, ИмяКонфигурации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоЗанято
		|ИЗ
		|	РегистрСведений.СлотыКонфигураций КАК СлотыКонфигураций
		|ГДЕ
		|	СлотыКонфигураций.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусСлотаКонфигурации.Удален)
		|	И СлотыКонфигураций.ИмяКонфигурации = &ИмяКонфигурации
		|	И СлотыКонфигураций.Сервер = &СерверСсылка";
	
	Запрос.УстановитьПараметр("ИмяКонфигурации", ИмяКонфигурации);
	Запрос.УстановитьПараметр("СерверСсылка", СерверСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ВыборкаДетальныеЗаписи.КоличествоЗанято = Null Тогда
		Возврат 0;	
	КонецЕсли;
	
	Возврат ВыборкаДетальныеЗаписи.КоличествоЗанято;
	
КонецФункции

Функция ДобавитьСлотыИзОтветаСервера(ДанныеСлотов, ДанныеГенерации, СерверСсылка, ИмяКонфигурации) Экспорт
	
	ДанныеГенерации = ОбщегоНазначения.ПреобразованиеМассивВТаблицуЗначений(ДанныеГенерации);
	
	ТекущееВремя = ТекущаяДата();
	
	Для Каждого Стр Из ДанныеСлотов Цикл
		
		Запись = СоздатьМенеджерЗаписи();
		Запись.ДатаСоздания = ТекущееВремя;
		Запись.Сервер = СерверСсылка;
		Запись.ИмяКонфигурации = ИмяКонфигурации;
		НайденаСтрока = ДанныеГенерации.Найти(СтрЗаменить(Стр.fileName, "_" + ИмяКонфигурации, ""), "name");
		Запись.ИдСлота = НайденаСтрока.id;
		Запись.НазваниеНаСервере = Стр.fileName;
		Запись.ФайлКонфигурации = Стр.file;
		Запись.Записать();
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьИнформациюОКонфигурациях(Серверы=Неопределено) Экспорт
	
	Если Серверы = Неопределено Тогда

		СерверыВыборка = Справочники.Сервер.Выбрать();
		Серверы = Новый Массив;
		
		Пока СерверыВыборка.Следующий() Цикл
			Серверы.Добавить(СерверыВыборка.Ссылка);	
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СлотыКонфигураций.Сервер КАК Сервер,
		|	СлотыКонфигураций.ИмяКонфигурации КАК ИмяКонфигурации,
		|	СУММА(1) КАК ВсегоСлотов,
		|	СУММА(0) КАК ДоступноСлотов
		|ПОМЕСТИТЬ ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ
		|ИЗ
		|	РегистрСведений.СлотыКонфигураций КАК СлотыКонфигураций
		|ГДЕ
		|	СлотыКонфигураций.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусСлотаКонфигурации.Удален)
		|	И СлотыКонфигураций.Сервер В(&Серверы)
		|
		|СГРУППИРОВАТЬ ПО
		|	СлотыКонфигураций.Сервер,
		|	СлотыКонфигураций.ИмяКонфигурации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СлотыКонфигураций.Сервер,
		|	СлотыКонфигураций.ИмяКонфигурации,
		|	СУММА(0),
		|	СУММА(1)
		|ИЗ
		|	РегистрСведений.СлотыКонфигураций КАК СлотыКонфигураций
		|ГДЕ
		|	СлотыКонфигураций.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусСлотаКонфигурации.Свободен)
		|	И СлотыКонфигураций.Сервер В(&Серверы)
		|
		|СГРУППИРОВАТЬ ПО
		|	СлотыКонфигураций.Сервер,
		|	СлотыКонфигураций.ИмяКонфигурации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.Сервер КАК Сервер,
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ИмяКонфигурации КАК ИмяКонфигурации,
		|	СУММА(ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ВсегоСлотов) КАК ВсегоСлотов,
		|	СУММА(ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ДоступноСлотов) КАК ДоступноСлотов
		|ПОМЕСТИТЬ ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ_СГРУППИРОВАННО
		|ИЗ
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ КАК ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.Сервер,
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ИмяКонфигурации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.Сервер КАК Сервер,
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ИмяКонфигурации КАК ИмяКонфигурации,
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ВсегоСлотов КАК ВсегоСлотов,
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ДоступноСлотов КАК ДоступноСлотов,
		|	(ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.Сервер.МаксимумСлотов - (ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ВсегоСлотов - ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.ДоступноСлотов))
		|		/ ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ.Сервер.МаксимумСлотов КАК КоэфициентПриоритетности
		|ИЗ
		|	ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ_СГРУППИРОВАННО КАК ВТ_ЗАНЯТОСТЬ_СЕРВЕРОВ
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоэфициентПриоритетности";
	
	Запрос.УстановитьПараметр("Серверы", Серверы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции