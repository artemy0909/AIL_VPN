#Область ОбработкаСобытий

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)    
	Объект.ДатаПодписки = ТекущаяДата();	
КонецПроцедуры

&НаКлиенте
Процедура ПланПодпискиПриИзменении(Элемент)
	
	ОчиститьВсеДанныеПодписки();
	
	Если Не ЗначениеЗаполнено(Объект.ПланПодписки) Тогда
		
		ЭтотОбъект.Элементы.ГруппаПодписка.Доступность = Ложь;
			
	Иначе	
			
		УстановитьОсновнойПрайсНаДату();
		
		Если НЕ ЗначениеЗаполнено(ПрайсЛист) Тогда
			
			Объект.ПланПодписки = Неопределено;
			Сообщить("Необходимо установить основной прайс-лист для продолжения работы!");
			ЭтотОбъект.Элементы.ГруппаПодписка.Доступность = Ложь;
			
		Иначе
			
			ЭтотОбъект.Элементы.ГруппаПодписка.Доступность = Истина;

		КонецЕсли;
	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПромокодПриИзменении(Элемент)
	
	ОчиститьТарифИСумму();
	УстановитьПрайсЛистПоПромокоду();
	ПроверитьДоступностьФормирования();

КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйТарифПриИзменении(Элемент)
	
	ВыбранныйТарифПриИзмененииНаСервере();
	ПроверитьДоступностьФормирования();

КонецПроцедуры

&НаКлиенте
Процедура ДатаПодпискиПриИзменении(Элемент)
	
	ОчиститьТарифИСумму();
	Сообщить("Необходимо заново выбрать тариф");

	
	Если ЗначениеЗаполнено(Объект.Промокод) Тогда
		
		УстановитьПрайсЛистПоПромокоду();
		
	Иначе
		
		УстановитьОсновнойПрайсНаДату();
	
	КонецЕсли;
	
	ПроверитьДоступностьФормирования();

КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	ПроверитьДоступностьФормирования();

КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьДоступностьФормирования()
	
	Если ОбщегоНазначения.ДатаЗаполнена(Объект.ДатаПодписки) И ЗначениеЗаполнено(Объект.Клиент) И ЗначениеЗаполнено(Объект.ВыбранныйТариф) Тогда
		
		ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Истина;	
		
	Иначе
		
		ЭтотОбъект.Элементы.ФормаСформировать.Доступность = Ложь;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ВыбранныйТарифПриИзмененииНаСервере()

	СтрокаТарифа = ПрайсЛист.ПолучитьОбъект().ПолучитьРасценкуПоТарифу(Объект.ВыбранныйТариф);

	Если СтрокаТарифа = Неопределено Тогда
	 
		Сообщить("Данный тариф не найден в текущем прайс-листе");	
		ОчиститьТарифИСумму();

	Иначе
		
		Объект.СуммаРегулярногоПлатежа = СтрокаТарифа.Сумма;
		
	КонецЕсли;
	 
КонецПроцедуры

&НаСервере
Процедура УстановитьПрайсЛистПоПромокоду()
	
	Если НЕ ОбщегоНазначения.ДатаЗаполнена(Объект.ДатаПодписки) Тогда
		
		Сообщить("Дата подписки не заполнена, не возможно проверить промокод!");
		ПромокодНайден = Ложь;
		Возврат;
		
	КонецЕсли;
	
	ДанныеПромокода = ПромокодыНаСервере.ПолучитьДанныеПоПромокоду(Объект.Промокод, Объект.ПланПодписки, Объект.ДатаПодписки);
	
	ПрайсЛист = ДанныеПромокода.ПрайсЛист;
	Реферал = ДанныеПромокода.Реферал;
	ИсточникПодписки = ДанныеПромокода.ИсточникПодписки;
	
	Если НЕ ЗначениеЗаполнено(ПрайсЛист) Тогда
		ПромокодНайден = Ложь;
		УстановитьОсновнойПрайсНаДату();
	Иначе
		ПромокодНайден = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнойПрайсНаДату()
	
	ПрайсЛист = РегистрыСведений.ИсторияИзмененийОсновныхПрайсЛистов.ПолучитьОсновнойПрайсЛистНаДату(Объект.ДатаПодписки, Объект.ПланПодписки);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТарифИСумму()
	
	Объект.ВыбранныйТариф = Неопределено;
	Объект.СуммаРегулярногоПлатежа = 0;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВсеДанныеПодписки()
	
	Объект.Промокод = "";
	ПрайсЛист = Неопределено;
	ОчиститьТарифИСумму();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСформированныйДокумент(Документ)
	
	НовыйДок = Объект.СформированныеДокументы.Добавить();
	НовыйДок.ДокументСсылка = Документ.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	Объект.СформированныеДокументы.Очистить();
	
	НоваяПодписка = Документы.Подписка.СоздатьДокумент();	
	
	НоваяПодписка.Клиент = Объект.Клиент;
	НоваяПодписка.ДатаНачала = Объект.ДатаПодписки;
	НоваяПодписка.ИсточникПодписки = ИсточникПодписки;
	НоваяПодписка.Реферал = Реферал;
	НоваяПодписка.Промокод = Объект.Промокод;
	НоваяПодписка.Тариф = Объект.ВыбранныйТариф;
	НоваяПодписка.СтавкаТарифа = Объект.СуммаРегулярногоПлатежа;
	
	НоваяПодписка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	ДобавитьСформированныйДокумент(НоваяПодписка);
	
	НовыйСчет = Документы.СчетНаОплатуПодписки.СоздатьДокумент();
	
	НовыйСчет.Контрагент = Объект.Клиент;
	НовыйСчет.Подписка = НоваяПодписка.Ссылка;
	НовыйСчет.КрайнийСрокОплаты = Объект.ДатаПодписки;	
	НовыйСчет.ТарифКОплате = Объект.ВыбранныйТариф;
	НовыйСчет.СуммаДокумента = Объект.СуммаРегулярногоПлатежа;
	
	НовыйСчет.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	ДобавитьСформированныйДокумент(НовыйСчет);
	
	НоваяОплата = Документы.ОплатаПодписки.СоздатьДокумент();
	
	НоваяОплата.СчетНаОплату = НовыйСчет.Ссылка;
	НоваяОплата.Контрагент = Объект.Клиент;
	НоваяОплата.Подписка = НоваяПодписка.Ссылка;
	НоваяОплата.ТарифКОплате = Объект.ВыбранныйТариф;
	НоваяОплата.СуммаДокумента = Объект.СуммаРегулярногоПлатежа;
	
	НоваяОплата.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	ДобавитьСформированныйДокумент(НоваяОплата);
	
КонецПроцедуры

#КонецОбласти
